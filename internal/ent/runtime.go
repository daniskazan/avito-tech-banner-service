// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/daniskazan/avito-tech-banner-service/internal/ent/banner"
	"github.com/daniskazan/avito-tech-banner-service/internal/ent/feature"
	"github.com/daniskazan/avito-tech-banner-service/internal/ent/schema"
	"github.com/daniskazan/avito-tech-banner-service/internal/ent/tag"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	bannerFields := schema.Banner{}.Fields()
	_ = bannerFields
	// bannerDescCreatedAt is the schema descriptor for created_at field.
	bannerDescCreatedAt := bannerFields[1].Descriptor()
	// banner.DefaultCreatedAt holds the default value on creation for the created_at field.
	banner.DefaultCreatedAt = bannerDescCreatedAt.Default.(func() time.Time)
	// bannerDescUpdatedAt is the schema descriptor for updated_at field.
	bannerDescUpdatedAt := bannerFields[2].Descriptor()
	// banner.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	banner.DefaultUpdatedAt = bannerDescUpdatedAt.Default.(func() time.Time)
	// bannerDescIsActive is the schema descriptor for is_active field.
	bannerDescIsActive := bannerFields[3].Descriptor()
	// banner.DefaultIsActive holds the default value on creation for the is_active field.
	banner.DefaultIsActive = bannerDescIsActive.Default.(bool)
	featureFields := schema.Feature{}.Fields()
	_ = featureFields
	// featureDescFeatureName is the schema descriptor for feature_name field.
	featureDescFeatureName := featureFields[0].Descriptor()
	// feature.FeatureNameValidator is a validator for the "feature_name" field. It is called by the builders before save.
	feature.FeatureNameValidator = featureDescFeatureName.Validators[0].(func(string) error)
	// featureDescCreatedAt is the schema descriptor for created_at field.
	featureDescCreatedAt := featureFields[1].Descriptor()
	// feature.DefaultCreatedAt holds the default value on creation for the created_at field.
	feature.DefaultCreatedAt = featureDescCreatedAt.Default.(func() time.Time)
	// featureDescUpdatedAt is the schema descriptor for updated_at field.
	featureDescUpdatedAt := featureFields[2].Descriptor()
	// feature.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	feature.DefaultUpdatedAt = featureDescUpdatedAt.Default.(func() time.Time)
	tagFields := schema.Tag{}.Fields()
	_ = tagFields
	// tagDescCreatedAt is the schema descriptor for created_at field.
	tagDescCreatedAt := tagFields[1].Descriptor()
	// tag.DefaultCreatedAt holds the default value on creation for the created_at field.
	tag.DefaultCreatedAt = tagDescCreatedAt.Default.(func() time.Time)
	// tagDescUpdatedAt is the schema descriptor for updated_at field.
	tagDescUpdatedAt := tagFields[2].Descriptor()
	// tag.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	tag.DefaultUpdatedAt = tagDescUpdatedAt.Default.(func() time.Time)
}
